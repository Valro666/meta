package projet;

import java.util.ArrayList;
import java.util.List;

public class Genetique {

	public List<Monochro> parent = new ArrayList<Monochro>();
	public List<Monochro> enfant = new ArrayList<Monochro>();

	public Genetique() {
		aleatoire(100);
		// enfant();
	}

	public boolean fin() {
		if (parent.get(0).valeur() == 0) {
			return true;
		} else {
			return false;
		}
	}

	public void populace() {
		for (Monochro m : enfant) {
			parent.add(m);
		}
	}

	public void elagage(){
		
		int nombre = parent.size()-100;
		
		if(nombre>0){
			
		}
		
		for(int i = 0 ; i < parent.size(); i++){
			if(i>100){
				parent.remove()
			}
		}
		
	}

	public void enfant() {
		for (int i = 0; i < 50; i++) {
			// int a = (int) (Math.random() * parent.size());
			// int b = (int) (Math.random() * parent.size());
			// System.out.println(a+" "+b);
			croisement(parent.get(random(10)), parent.get(random(10)));
		}
	}

	int random(int i) {
		return (int) (Math.random() * i);
	}

	public void aleatoire(int n) {
		for (int i = 0; i < n; i++) {
			parent.add(new Monochro(10));
		}
	}

	public void croisement(Monochro m, Monochro o) {
		Monochro adan = new Monochro(10);
		Monochro eve = new Monochro(10);

		for (int i = 0; i < 10; i++) {
			for (int j = 0; j < 10; j++) {
				if (random(1) > 0.5) {
					adan.matrice[i][j] = m.matrice[i][j];
					eve.matrice[i][j] = o.matrice[i][j];
				} else {
					adan.matrice[i][j] = o.matrice[i][j];
					eve.matrice[i][j] = m.matrice[i][j];
				}
			}
		}

		if (random(1) < .1) {
			adan.mutation();
		}

		if (random(1) < .1) {
			eve.mutation();
		}

		enfant.add(adan);
		enfant.add(eve);
	}

	public void affichage() {
		int tour = 0;
		for (Monochro m : parent) {
			System.out.print(m);
			tour++;
			if (tour % 25 == 0)
				System.out.println();
		}
		System.out.println();
		tour = 0;
		for (Monochro m : enfant) {
			System.out.print(m);
			tour++;
			if (tour % 25 == 0)
				System.out.println();
		}
	}

}
