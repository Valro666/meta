package affichage;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.GridLayout;
import java.awt.LayoutManager;
import java.util.ArrayList;
import java.util.Observable;
import java.util.Observer;

import javax.swing.JLabel;
import javax.swing.JPanel;

import projet.Monochro;
import projet.Single;

public class Info extends JPanel implements Observer {

	private static final long serialVersionUID = 1L;

	Monochro mono;
	JLabel nombre;
	LayoutManager mana;

	public Info() {
		this.setPreferredSize(new Dimension(100, 100));
		mana = new GridLayout(1, 2);
		this.setLayout(mana);
		mono = Single.getInstance().mono;
		Single.getInstance().mono.addObserver(this);
		nombre = new JLabel(mono.valeur() + " ");
		this.add(nombre);
	}

	@Override
	protected void paintComponent(Graphics g) {
		// TODO Auto-generated method stub
		super.paintComponent(g);

		ArrayList<Integer> histo = Single.getInstance().historique;

		int pos = 10;
		for (Integer i : histo) {
			g.drawLine(0, 0, pos, i);
			pos += 10;
			// g.drawLine(pos, 0, pos, i);
		}
		repaint();
		revalidate();

	}

	@Override
	public void update(Observable arg0, Object arg1) {
		// TODO Auto-generated method stub

		// this.setPreferredSize(new Dimension(500, 500));
		nombre.setText(mono.valeur() + " ");
	}

}
